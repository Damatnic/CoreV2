[build]
  command = "npm run build:netlify"
  functions = "netlify/functions"
  publish = "dist"

[dev]
  command = "npm run dev:vite"
  targetPort = 3002
  port = 8888
  autoLaunch = false

[build.environment]
  NODE_VERSION = "18"
  NPM_VERSION = "9"

# Service Worker specific headers
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    Service-Worker-Allowed = "/"

# Crisis resources - cache for offline access but allow updates
[[headers]]
  for = "/crisis-resources.json"
  [headers.values]
    Cache-Control = "public, max-age=300, stale-while-revalidate=86400"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, OPTIONS"

[[headers]]
  for = "/offline-coping-strategies.json"
  [headers.values]
    Cache-Control = "public, max-age=300, stale-while-revalidate=86400"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, OPTIONS"

[[headers]]
  for = "/emergency-contacts.json"
  [headers.values]
    Cache-Control = "public, max-age=300, stale-while-revalidate=86400"
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, OPTIONS"

# Offline fallback pages
[[headers]]
  for = "/offline.html"
  [headers.values]
    Cache-Control = "public, max-age=3600, stale-while-revalidate=86400"

[[headers]]
  for = "/offline-crisis.html"
  [headers.values]
    Cache-Control = "public, max-age=3600, stale-while-revalidate=86400"

# PWA manifest
[[headers]]
  for = "/manifest.json"
  [headers.values]
    Cache-Control = "public, max-age=3600"
    Content-Type = "application/manifest+json"

# Static assets - long cache with immutable content
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Icons and images
[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

[[headers]]
  for = "/*.ico"
  [headers.values]
    Cache-Control = "public, max-age=31536000"

# HTML pages - short cache to allow updates
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Security headers for all pages
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"

# Redirect HTTP to HTTPS
[[redirects]]
  from = "http://astral-core-react.netlify.app/*"
  to = "https://astral-core-react.netlify.app/:splat"
  status = 301
  force = true

# SPA fallback - serve index.html for client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Role = ["admin", "editor"], Country = ["US"]}

# Crisis page fallback when offline
[[redirects]]
  from = "/crisis"
  to = "/offline-crisis.html"
  status = 200
  conditions = {Role = ["offline"]}

# API routes to Netlify Functions
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Environment-specific settings
[context.production]
  command = "npm run build:production"
  [context.production.environment]
    NODE_ENV = "production"
    VITE_BUILD_MODE = "production"

[context.development]
  command = "npm run dev:vite"
  targetPort = 3002
  [context.development.environment]
    NODE_ENV = "development"
    VITE_BUILD_MODE = "development"

[context.branch-deploy]
  [context.branch-deploy.environment]
    NODE_ENV = "development"
    VITE_BUILD_MODE = "development"

[context.deploy-preview]
  [context.deploy-preview.environment]
    NODE_ENV = "staging"
    VITE_BUILD_MODE = "staging"

# Edge functions for crisis detection (future enhancement)
# [[edge_functions]]
#   function = "crisis-detector"
#   path = "/api/crisis-detection"

# Plugin configurations
[[plugins]]
  package = "netlify-plugin-submit-sitemap"
  [plugins.inputs]
    baseUrl = "https://astral-core-react.netlify.app"
    sitemapPath = "/sitemap.xml"
    ignorePeriod = 0

# Performance optimizations
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true

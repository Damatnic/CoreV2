{"numFailedTestSuites":9,"numFailedTests":33,"numPassedTestSuites":8,"numPassedTests":227,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":17,"numTotalTests":260,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1755478090306,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Enhanced Crisis Detection Integration"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Enhanced Crisis Detection Integration should use enhanced crisis detection by default","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should use enhanced crisis detection by default"},{"ancestorTitles":["Enhanced Crisis Detection Integration"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\enhancedCrisisDetectionIntegration.test.ts:36:29)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Enhanced Crisis Detection Integration should fallback to basic detection when enhanced fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should fallback to basic detection when enhanced fails"},{"ancestorTitles":["Enhanced Crisis Detection Integration"],"duration":2,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\enhancedCrisisDetectionIntegration.test.ts:53:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Enhanced Crisis Detection Integration should detect various crisis indicators","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect various crisis indicators"},{"ancestorTitles":["Enhanced Crisis Detection Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Enhanced Crisis Detection Integration should not flag normal content as crisis","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not flag normal content as crisis"},{"ancestorTitles":["Enhanced Crisis Detection Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Enhanced Crisis Detection Integration should provide intervention recommendations for crisis content","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide intervention recommendations for crisis content"}],"endTime":1755478095781,"message":"  ● Enhanced Crisis Detection Integration › should fallback to basic detection when enhanced fails\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 34 |\u001b[39m     \u001b[90m// Should still detect crisis even in fallback mode\u001b[39m\n     \u001b[90m 35 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'isCrisis'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 36 |\u001b[39m     expect(result\u001b[33m.\u001b[39misCrisis)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 37 |\u001b[39m\n     \u001b[90m 38 |\u001b[39m     console\u001b[33m.\u001b[39merror \u001b[33m=\u001b[39m originalConsoleError\u001b[33m;\u001b[39m\n     \u001b[90m 39 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/enhancedCrisisDetectionIntegration.test.ts:36:29)\n\n  ● Enhanced Crisis Detection Integration › should detect various crisis indicators\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 51 |\u001b[39m     \u001b[36mfor\u001b[39m (\u001b[36mconst\u001b[39m text \u001b[36mof\u001b[39m testCases) {\n     \u001b[90m 52 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m crisisService\u001b[33m.\u001b[39manalyze(text)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 53 |\u001b[39m       expect(result\u001b[33m.\u001b[39misCrisis)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 54 |\u001b[39m       expect(result\u001b[33m.\u001b[39mseverity)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(\u001b[32m'none'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     }\n     \u001b[90m 56 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/enhancedCrisisDetectionIntegration.test.ts:53:31)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\enhancedCrisisDetectionIntegration.test.ts","startTime":1755478093071,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Crisis Escalation Workflow Integration"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Integration should trigger escalation workflow for severe crisis","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should trigger escalation workflow for severe crisis"},{"ancestorTitles":["Crisis Escalation Workflow Integration"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Integration should not trigger escalation for non-crisis content","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not trigger escalation for non-crisis content"},{"ancestorTitles":["Crisis Escalation Workflow Integration"],"duration":54,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Integration should analyze conversation and trigger escalation when needed","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should analyze conversation and trigger escalation when needed"},{"ancestorTitles":["Crisis Escalation Workflow Integration"],"duration":4,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisEscalationWorkflowIntegration.test.ts:125:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Workflow Integration should check user crisis state across multiple messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should check user crisis state across multiple messages"},{"ancestorTitles":["Crisis Escalation Workflow Integration"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisEscalationWorkflowIntegration.test.ts:147:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Workflow Integration should handle escalation service failures gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle escalation service failures gracefully"},{"ancestorTitles":["Crisis Escalation Workflow Integration"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: Any<Object>, \"context-test-user\", ObjectContaining {\"accessibilityNeeds\": [\"screen-reader\"], \"culturalContext\": \"hispanic\", \"languageCode\": \"es\", \"location\": ObjectContaining {\"country\": \"US\", \"hasGeolocation\": true, \"region\": \"CA\"}, \"preferredContactMethod\": \"phone\", \"timeZone\": \"America/Los_Angeles\"}, ObjectContaining {\"conversationId\": \"context-test-session\", \"messagesSent\": 5, \"previousEscalations\": 1, \"riskTrend\": \"increasing\", \"sessionDuration\": 300000}\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: Any<Object>, \"context-test-user\", ObjectContaining {\"accessibilityNeeds\": [\"screen-reader\"], \"culturalContext\": \"hispanic\", \"languageCode\": \"es\", \"location\": ObjectContaining {\"country\": \"US\", \"hasGeolocation\": true, \"region\": \"CA\"}, \"preferredContactMethod\": \"phone\", \"timeZone\": \"America/Los_Angeles\"}, ObjectContaining {\"conversationId\": \"context-test-session\", \"messagesSent\": 5, \"previousEscalations\": 1, \"riskTrend\": \"increasing\", \"sessionDuration\": 300000}\n\nNumber of calls: 0\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisEscalationWorkflowIntegration.test.ts:182:70)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Workflow Integration should provide appropriate user context to escalation service","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide appropriate user context to escalation service"}],"endTime":1755478095789,"message":"  ● Crisis Escalation Workflow Integration › should check user crisis state across multiple messages\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 123 |\u001b[39m     )\u001b[33m;\u001b[39m\n     \u001b[90m 124 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 125 |\u001b[39m     expect(crisisState\u001b[33m.\u001b[39misInCrisis)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 126 |\u001b[39m     expect([\u001b[32m'high'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'critical'\u001b[39m])\u001b[33m.\u001b[39mtoContain(crisisState\u001b[33m.\u001b[39mhighestSeverity)\u001b[33m;\u001b[39m\n     \u001b[90m 127 |\u001b[39m     expect(crisisState\u001b[33m.\u001b[39mescalationTriggered)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 128 |\u001b[39m     expect(crisisState\u001b[33m.\u001b[39mrecommendedActions\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisEscalationWorkflowIntegration.test.ts:125:36)\n\n  ● Crisis Escalation Workflow Integration › should handle escalation service failures gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 145 |\u001b[39m     \u001b[90m// Should still detect crisis even if escalation fails\u001b[39m\n     \u001b[90m 146 |\u001b[39m     expect(result\u001b[33m.\u001b[39misCrisis)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 147 |\u001b[39m     expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 148 |\u001b[39m     expect(result\u001b[33m.\u001b[39mescalationResponse)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m \u001b[90m// Escalation failed\u001b[39m\n     \u001b[90m 149 |\u001b[39m     expect(result\u001b[33m.\u001b[39menhanced)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Enhanced detection still worked\u001b[39m\n     \u001b[90m 150 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisEscalationWorkflowIntegration.test.ts:147:39)\n\n  ● Crisis Escalation Workflow Integration › should provide appropriate user context to escalation service\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: Any<Object>, \"context-test-user\", ObjectContaining {\"accessibilityNeeds\": [\"screen-reader\"], \"culturalContext\": \"hispanic\", \"languageCode\": \"es\", \"location\": ObjectContaining {\"country\": \"US\", \"hasGeolocation\": true, \"region\": \"CA\"}, \"preferredContactMethod\": \"phone\", \"timeZone\": \"America/Los_Angeles\"}, ObjectContaining {\"conversationId\": \"context-test-session\", \"messagesSent\": 5, \"previousEscalations\": 1, \"riskTrend\": \"increasing\", \"sessionDuration\": 300000}\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 180 |\u001b[39m\n     \u001b[90m 181 |\u001b[39m     \u001b[90m// Verify escalation service was called with correct parameters\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 182 |\u001b[39m     expect(crisisEscalationWorkflowService\u001b[33m.\u001b[39minitiateCrisisEscalation)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 183 |\u001b[39m       expect\u001b[33m.\u001b[39many(\u001b[33mObject\u001b[39m)\u001b[33m,\u001b[39m \u001b[90m// crisis analysis\u001b[39m\n     \u001b[90m 184 |\u001b[39m       \u001b[32m'context-test-user'\u001b[39m\u001b[33m,\u001b[39m \u001b[90m// user ID\u001b[39m\n     \u001b[90m 185 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisEscalationWorkflowIntegration.test.ts:182:70)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisEscalationWorkflowIntegration.test.ts","startTime":1755478092910,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1755478108932,"message":"  ● Test suite failed to run\n\n    \u001b[96mtests/integration/crisis-detection-validation.test.ts\u001b[0m:\u001b[93m160\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m160\u001b[0m       expect(result.severityLevel: 'high');\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~\u001b[0m\n    \u001b[96mtests/integration/crisis-detection-validation.test.ts\u001b[0m:\u001b[93m301\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS1005: \u001b[0m',' expected.\n\n    \u001b[7m301\u001b[0m       expect(result.severityLevel: 'high'); // Still detects crisis\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~\u001b[0m\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisis-detection-validation.test.ts","startTime":1755478108932,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Service Worker Cache Strategies","Crisis Resources Cache (Cache First)"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Crisis Resources Cache (Cache First) should cache crisis resources with highest priority","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should cache crisis resources with highest priority"},{"ancestorTitles":["Service Worker Cache Strategies","Crisis Resources Cache (Cache First)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Crisis Resources Cache (Cache First) should serve crisis resources from cache first","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should serve crisis resources from cache first"},{"ancestorTitles":["Service Worker Cache Strategies","Crisis Resources Cache (Cache First)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Crisis Resources Cache (Cache First) should return undefined for cache miss","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return undefined for cache miss"},{"ancestorTitles":["Service Worker Cache Strategies","Crisis Resources Cache (Cache First)"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Crisis Resources Cache (Cache First) should handle cache storage errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle cache storage errors gracefully"},{"ancestorTitles":["Service Worker Cache Strategies","Offline Pages Cache"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Offline Pages Cache should cache offline fallback pages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should cache offline fallback pages"},{"ancestorTitles":["Service Worker Cache Strategies","Offline Pages Cache"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Offline Pages Cache should serve offline page when network fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should serve offline page when network fails"},{"ancestorTitles":["Service Worker Cache Strategies","Offline Pages Cache"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Offline Pages Cache should prioritize crisis offline page for crisis routes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should prioritize crisis offline page for crisis routes"},{"ancestorTitles":["Service Worker Cache Strategies","API Cache (Network First)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies API Cache (Network First) should cache API responses","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should cache API responses"},{"ancestorTitles":["Service Worker Cache Strategies","API Cache (Network First)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies API Cache (Network First) should serve cached API response when network fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should serve cached API response when network fails"},{"ancestorTitles":["Service Worker Cache Strategies","API Cache (Network First)"],"duration":124,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies API Cache (Network First) should handle network timeout for API calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle network timeout for API calls"},{"ancestorTitles":["Service Worker Cache Strategies","Image Cache (Stale While Revalidate)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Image Cache (Stale While Revalidate) should cache images","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should cache images"},{"ancestorTitles":["Service Worker Cache Strategies","Image Cache (Stale While Revalidate)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Image Cache (Stale While Revalidate) should serve cached images immediately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should serve cached images immediately"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Management should list all cached requests","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should list all cached requests"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Management should delete specific cache entries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should delete specific cache entries"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Management should handle cache deletion failures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle cache deletion failures"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Management should check if cache exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check if cache exists"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Management should get all cache names","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should get all cache names"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Management should delete entire cache","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should delete entire cache"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Size Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Size Management should respect maximum cache size limits","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should respect maximum cache size limits"},{"ancestorTitles":["Service Worker Cache Strategies","Cache Size Management"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Cache Strategies Cache Size Management should implement cache eviction for API cache","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should implement cache eviction for API cache"}],"endTime":1755478095997,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\service-worker\\cache-strategies.test.ts","startTime":1755478093119,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Offline Functionality","Network Detection"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Network Detection should detect online state","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect online state"},{"ancestorTitles":["Offline Functionality","Network Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Network Detection should detect offline state","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect offline state"},{"ancestorTitles":["Offline Functionality","Network Detection"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Network Detection should handle online/offline events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle online/offline events"},{"ancestorTitles":["Offline Functionality","Crisis Resources Offline Access"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Crisis Resources Offline Access should serve crisis resources from cache when offline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should serve crisis resources from cache when offline"},{"ancestorTitles":["Offline Functionality","Crisis Resources Offline Access"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Crisis Resources Offline Access should provide coping strategies offline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide coping strategies offline"},{"ancestorTitles":["Offline Functionality","Crisis Resources Offline Access"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Crisis Resources Offline Access should provide emergency contacts offline","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should provide emergency contacts offline"},{"ancestorTitles":["Offline Functionality","Offline Navigation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Offline Navigation should serve offline fallback page for general routes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should serve offline fallback page for general routes"},{"ancestorTitles":["Offline Functionality","Offline Navigation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Offline Navigation should serve crisis-specific offline page for crisis routes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should serve crisis-specific offline page for crisis routes"},{"ancestorTitles":["Offline Functionality","Offline Data Synchronization"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Offline Data Synchronization should queue requests when offline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should queue requests when offline"},{"ancestorTitles":["Offline Functionality","Offline Data Synchronization"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Offline Data Synchronization should process queued requests when back online","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process queued requests when back online"},{"ancestorTitles":["Offline Functionality","Offline Storage Management"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Offline Storage Management should store critical data locally","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should store critical data locally"},{"ancestorTitles":["Offline Functionality","Offline Storage Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Offline Storage Management should retrieve cached data when offline","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should retrieve cached data when offline"},{"ancestorTitles":["Offline Functionality","Performance in Offline Mode"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Performance in Offline Mode should load cached resources quickly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should load cached resources quickly"},{"ancestorTitles":["Offline Functionality","Performance in Offline Mode"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Offline Functionality Performance in Offline Mode should minimize battery usage in offline mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should minimize battery usage in offline mode"}],"endTime":1755478096096,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\service-worker\\offline-functionality.test.ts","startTime":1755478093217,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Service Worker Registration","Registration Process"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Registration Process should register service worker successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should register service worker successfully"},{"ancestorTitles":["Service Worker Registration","Registration Process"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Registration Process should handle registration failure gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle registration failure gracefully"},{"ancestorTitles":["Service Worker Registration","Registration Process"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Registration Process should check if service worker is supported","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check if service worker is supported"},{"ancestorTitles":["Service Worker Registration","Registration Process"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Registration Process should handle registration with options","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle registration with options"},{"ancestorTitles":["Service Worker Registration","Service Worker Ready State"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Ready State should resolve when service worker is ready","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should resolve when service worker is ready"},{"ancestorTitles":["Service Worker Registration","Service Worker Controller"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Controller should have controller when service worker is active","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have controller when service worker is active"},{"ancestorTitles":["Service Worker Registration","Service Worker Controller"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Controller should send messages to controller","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should send messages to controller"},{"ancestorTitles":["Service Worker Registration","Service Worker Events"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Events should add event listeners","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add event listeners"},{"ancestorTitles":["Service Worker Registration","Service Worker Events"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Events should remove event listeners","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should remove event listeners"},{"ancestorTitles":["Service Worker Registration","Service Worker Registration Retrieval"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Registration Retrieval should get registration for scope","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should get registration for scope"},{"ancestorTitles":["Service Worker Registration","Service Worker Registration Retrieval"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Registration Service Worker Registration Retrieval should return undefined for non-existent registration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return undefined for non-existent registration"}],"endTime":1755478096103,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\service-worker\\registration.test.ts","startTime":1755478093218,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Crisis Scenario Testing","Crisis Resource Availability"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Resource Availability should ensure 988 lifeline is always accessible offline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should ensure 988 lifeline is always accessible offline"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Resource Availability"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Resource Availability should provide crisis text line access offline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide crisis text line access offline"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Resource Availability"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Resource Availability should ensure all critical resources are cached","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should ensure all critical resources are cached"},{"ancestorTitles":["Crisis Scenario Testing","Emergency Response Speed"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Emergency Response Speed should load crisis resources in under 100ms","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should load crisis resources in under 100ms"},{"ancestorTitles":["Crisis Scenario Testing","Emergency Response Speed"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Emergency Response Speed should prioritize crisis page loading","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should prioritize crisis page loading"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Detection and Response"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Detection and Response should identify crisis keywords in content","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should identify crisis keywords in content"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Detection and Response"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Detection and Response should provide immediate coping strategies for crisis","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide immediate coping strategies for crisis"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Communication Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Communication Features should enable crisis alert notifications","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should enable crisis alert notifications"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Communication Features"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Communication Features should provide crisis chat templates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide crisis chat templates"},{"ancestorTitles":["Crisis Scenario Testing","Safety Plan Access"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Safety Plan Access should provide offline safety plan template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should provide offline safety plan template"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Resource Reliability"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Resource Reliability should verify all crisis resources are accessible","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should verify all crisis resources are accessible"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Resource Reliability"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Resource Reliability should handle cache corruption gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle cache corruption gracefully"},{"ancestorTitles":["Crisis Scenario Testing","Crisis Resource Reliability"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Scenario Testing Crisis Resource Reliability should measure crisis resource load times","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should measure crisis resource load times"}],"endTime":1755478096167,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\service-worker\\crisis-scenarios.test.ts","startTime":1755478093362,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Cross-Browser Compatibility","Browser Detection"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Browser Detection should detect Chrome browser","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect Chrome browser"},{"ancestorTitles":["Cross-Browser Compatibility","Browser Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Browser Detection should detect Firefox browser","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect Firefox browser"},{"ancestorTitles":["Cross-Browser Compatibility","Browser Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Browser Detection should detect Safari browser","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect Safari browser"},{"ancestorTitles":["Cross-Browser Compatibility","Browser Detection"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Browser Detection should detect Edge browser","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect Edge browser"},{"ancestorTitles":["Cross-Browser Compatibility","Service Worker Support Detection"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Service Worker Support Detection should check service worker support","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should check service worker support"},{"ancestorTitles":["Cross-Browser Compatibility","Service Worker Support Detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Service Worker Support Detection should handle browsers without service worker support","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle browsers without service worker support"},{"ancestorTitles":["Cross-Browser Compatibility","Service Worker Support Detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Service Worker Support Detection should check cache API support","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should check cache API support"},{"ancestorTitles":["Cross-Browser Compatibility","Service Worker Support Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Service Worker Support Detection should handle browsers without cache API support","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle browsers without cache API support"},{"ancestorTitles":["Cross-Browser Compatibility","Chrome-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Chrome-specific Features should support background sync in Chrome","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should support background sync in Chrome"},{"ancestorTitles":["Cross-Browser Compatibility","Chrome-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Chrome-specific Features should support push notifications in Chrome","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should support push notifications in Chrome"},{"ancestorTitles":["Cross-Browser Compatibility","Chrome-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Chrome-specific Features should handle Chrome cache quotas","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle Chrome cache quotas"},{"ancestorTitles":["Cross-Browser Compatibility","Firefox-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Firefox-specific Features should handle Firefox cache behavior","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle Firefox cache behavior"},{"ancestorTitles":["Cross-Browser Compatibility","Firefox-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Firefox-specific Features should handle Firefox service worker scope restrictions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle Firefox service worker scope restrictions"},{"ancestorTitles":["Cross-Browser Compatibility","Safari-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Safari-specific Features should handle Safari service worker limitations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle Safari service worker limitations"},{"ancestorTitles":["Cross-Browser Compatibility","Safari-specific Features"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Safari-specific Features should handle Safari cache size limitations","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle Safari cache size limitations"},{"ancestorTitles":["Cross-Browser Compatibility","Safari-specific Features"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Safari-specific Features should handle Safari private browsing mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle Safari private browsing mode"},{"ancestorTitles":["Cross-Browser Compatibility","Mobile Browser Compatibility"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Mobile Browser Compatibility should handle iOS Safari mobile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle iOS Safari mobile"},{"ancestorTitles":["Cross-Browser Compatibility","Mobile Browser Compatibility"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Mobile Browser Compatibility should handle Android Chrome mobile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle Android Chrome mobile"},{"ancestorTitles":["Cross-Browser Compatibility","Mobile Browser Compatibility"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Mobile Browser Compatibility should handle mobile-specific service worker features","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle mobile-specific service worker features"},{"ancestorTitles":["Cross-Browser Compatibility","Progressive Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Progressive Enhancement should provide fallbacks when service worker is not supported","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide fallbacks when service worker is not supported"},{"ancestorTitles":["Cross-Browser Compatibility","Progressive Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Progressive Enhancement should provide cache fallbacks","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should provide cache fallbacks"},{"ancestorTitles":["Cross-Browser Compatibility","Progressive Enhancement"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Progressive Enhancement should handle offline detection across browsers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle offline detection across browsers"},{"ancestorTitles":["Cross-Browser Compatibility","Feature Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Feature Detection should detect IndexedDB support","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect IndexedDB support"},{"ancestorTitles":["Cross-Browser Compatibility","Feature Detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Feature Detection should detect Web Workers support","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect Web Workers support"},{"ancestorTitles":["Cross-Browser Compatibility","Feature Detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Feature Detection should detect Fetch API support","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect Fetch API support"},{"ancestorTitles":["Cross-Browser Compatibility","Feature Detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Feature Detection should detect Promise support","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect Promise support"},{"ancestorTitles":["Cross-Browser Compatibility","Feature Detection"],"duration":21,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Feature Detection should create feature detection utility","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create feature detection utility"},{"ancestorTitles":["Cross-Browser Compatibility","Error Handling Across Browsers"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Error Handling Across Browsers should handle registration failures gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle registration failures gracefully"},{"ancestorTitles":["Cross-Browser Compatibility","Error Handling Across Browsers"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Error Handling Across Browsers should handle cache operation failures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle cache operation failures"},{"ancestorTitles":["Cross-Browser Compatibility","Error Handling Across Browsers"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"Cross-Browser Compatibility Error Handling Across Browsers should handle network failures consistently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle network failures consistently"}],"endTime":1755478096182,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\service-worker\\cross-browser.test.ts","startTime":1755478093259,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["API Endpoints Integration Tests","Authentication API"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Authentication API POST /api-auth - Register new user","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-auth - Register new user"},{"ancestorTitles":["API Endpoints Integration Tests","Authentication API"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Authentication API POST /api-auth - Login with valid credentials","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-auth - Login with valid credentials"},{"ancestorTitles":["API Endpoints Integration Tests","Authentication API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Authentication API POST /api-auth - Login with invalid credentials","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"POST /api-auth - Login with invalid credentials"},{"ancestorTitles":["API Endpoints Integration Tests","Authentication API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Authentication API POST /api-auth - Validate token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"POST /api-auth - Validate token"},{"ancestorTitles":["API Endpoints Integration Tests","Authentication API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Authentication API POST /api-auth - Refresh token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"POST /api-auth - Refresh token"},{"ancestorTitles":["API Endpoints Integration Tests","Wellness API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Wellness API POST /api-wellness - Create mood entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-wellness - Create mood entry"},{"ancestorTitles":["API Endpoints Integration Tests","Wellness API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Wellness API GET /api-wellness - Get mood history","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"GET /api-wellness - Get mood history"},{"ancestorTitles":["API Endpoints Integration Tests","Wellness API"],"duration":9,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Wellness API POST /api-wellness - Create journal entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-wellness - Create journal entry"},{"ancestorTitles":["API Endpoints Integration Tests","Wellness API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Wellness API POST /api-wellness - Track habit","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"POST /api-wellness - Track habit"},{"ancestorTitles":["API Endpoints Integration Tests","Wellness API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Wellness API GET /api-wellness - Get wellness insights","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"GET /api-wellness - Get wellness insights"},{"ancestorTitles":["API Endpoints Integration Tests","Safety API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Safety API POST /api-safety - Create safety plan","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-safety - Create safety plan"},{"ancestorTitles":["API Endpoints Integration Tests","Safety API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Safety API GET /api-safety - Get safety plan","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"GET /api-safety - Get safety plan"},{"ancestorTitles":["API Endpoints Integration Tests","Safety API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Safety API POST /api-safety - Report crisis","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-safety - Report crisis"},{"ancestorTitles":["API Endpoints Integration Tests","Safety API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Safety API GET /api-safety - Get emergency contacts","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"GET /api-safety - Get emergency contacts"},{"ancestorTitles":["API Endpoints Integration Tests","AI Chat API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests AI Chat API POST /api-ai - Send message to AI","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"POST /api-ai - Send message to AI"},{"ancestorTitles":["API Endpoints Integration Tests","AI Chat API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests AI Chat API POST /api-ai - Crisis detection in message","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"POST /api-ai - Crisis detection in message"},{"ancestorTitles":["API Endpoints Integration Tests","AI Chat API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests AI Chat API GET /api-ai - Get conversation history","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"GET /api-ai - Get conversation history"},{"ancestorTitles":["API Endpoints Integration Tests","Real-time API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Real-time API POST /api-realtime - Subscribe to notifications","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-realtime - Subscribe to notifications"},{"ancestorTitles":["API Endpoints Integration Tests","Real-time API"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Real-time API POST /api-realtime - Send mood update","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"POST /api-realtime - Send mood update"},{"ancestorTitles":["API Endpoints Integration Tests","Real-time API"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Real-time API POST /api-realtime - Trigger crisis alert","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"POST /api-realtime - Trigger crisis alert"},{"ancestorTitles":["API Endpoints Integration Tests","Security Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Security Tests Unauthorized access returns 401","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Unauthorized access returns 401"},{"ancestorTitles":["API Endpoints Integration Tests","Security Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Security Tests Invalid token returns 401","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Invalid token returns 401"},{"ancestorTitles":["API Endpoints Integration Tests","Security Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Security Tests SQL injection attempt is blocked","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"SQL injection attempt is blocked"},{"ancestorTitles":["API Endpoints Integration Tests","Security Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Security Tests XSS attempt is sanitized","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"XSS attempt is sanitized"},{"ancestorTitles":["API Endpoints Integration Tests","Security Tests"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Security Tests Rate limiting is enforced","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Rate limiting is enforced"},{"ancestorTitles":["API Endpoints Integration Tests","Security Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Security Tests CORS headers are properly set","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"CORS headers are properly set"},{"ancestorTitles":["API Endpoints Integration Tests","Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Error Handling Invalid endpoint returns 404","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Invalid endpoint returns 404"},{"ancestorTitles":["API Endpoints Integration Tests","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Error Handling Invalid JSON returns 400","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Invalid JSON returns 400"},{"ancestorTitles":["API Endpoints Integration Tests","Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Error Handling Missing required fields returns 400","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"Missing required fields returns 400"},{"ancestorTitles":["API Endpoints Integration Tests","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"API Endpoints Integration Tests Error Handling Server error returns 500","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"Server error returns 500"}],"endTime":1755478096210,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\api-endpoints.test.ts","startTime":1755478093365,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Crisis Escalation Workflow Service","Crisis Escalation Initiation"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Crisis Escalation Initiation should initiate peer support escalation for low-risk situations","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should initiate peer support escalation for low-risk situations"},{"ancestorTitles":["Crisis Escalation Workflow Service","Crisis Escalation Initiation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Crisis Escalation Initiation should initiate crisis counselor escalation for high-risk situations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should initiate crisis counselor escalation for high-risk situations"},{"ancestorTitles":["Crisis Escalation Workflow Service","Crisis Escalation Initiation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Crisis Escalation Initiation should initiate emergency team escalation for critical situations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should initiate emergency team escalation for critical situations"},{"ancestorTitles":["Crisis Escalation Workflow Service","Crisis Escalation Initiation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Crisis Escalation Initiation should initiate emergency services escalation for emergency situations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should initiate emergency services escalation for emergency situations"},{"ancestorTitles":["Crisis Escalation Workflow Service","Crisis Escalation Initiation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Crisis Escalation Initiation should handle manual override for escalation tier","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle manual override for escalation tier"},{"ancestorTitles":["Crisis Escalation Workflow Service","Crisis Escalation Initiation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Crisis Escalation Initiation should fallback to emergency services on escalation failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fallback to emergency services on escalation failure"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Escalation"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Escalation should handle immediate emergency escalation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle immediate emergency escalation"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Escalation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Escalation should handle medical emergency escalation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle medical emergency escalation"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Escalation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Escalation should handle violence threat escalation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle violence threat escalation"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Monitoring and Updates"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Monitoring and Updates should track active escalations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should track active escalations"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Monitoring and Updates"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Monitoring and Updates should update escalation status","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should update escalation status"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Monitoring and Updates"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Monitoring and Updates should handle non-existent escalation updates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle non-existent escalation updates"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Contacts"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Contacts should return emergency contacts for US location","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return emergency contacts for US location"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Contacts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Contacts should return emergency contacts with language preference","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return emergency contacts with language preference"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Contacts"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Contacts should sort contacts by effectiveness","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should sort contacts by effectiveness"},{"ancestorTitles":["Crisis Escalation Workflow Service","Emergency Contacts"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Emergency Contacts should handle unknown location gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle unknown location gracefully"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Metrics"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Metrics should return escalation metrics","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should return escalation metrics"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Metrics"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Metrics should track escalations by tier","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should track escalations by tier"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Tier Selection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Tier Selection should select appropriate tier based on risk level","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should select appropriate tier based on risk level"},{"ancestorTitles":["Crisis Escalation Workflow Service","Escalation Tier Selection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Escalation Tier Selection should escalate to emergency services when explicitly required","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should escalate to emergency services when explicitly required"},{"ancestorTitles":["Crisis Escalation Workflow Service","Cultural and Accessibility Considerations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Cultural and Accessibility Considerations should handle cultural context in escalation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle cultural context in escalation"},{"ancestorTitles":["Crisis Escalation Workflow Service","Cultural and Accessibility Considerations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Cultural and Accessibility Considerations should handle accessibility needs in escalation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle accessibility needs in escalation"},{"ancestorTitles":["Crisis Escalation Workflow Service","Error Handling and Edge Cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Error Handling and Edge Cases should handle missing user context gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle missing user context gracefully"},{"ancestorTitles":["Crisis Escalation Workflow Service","Error Handling and Edge Cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Error Handling and Edge Cases should handle invalid escalation requests","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle invalid escalation requests"},{"ancestorTitles":["Crisis Escalation Workflow Service","Error Handling and Edge Cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Error Handling and Edge Cases should handle concurrent escalations for same user","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle concurrent escalations for same user"},{"ancestorTitles":["Crisis Escalation Workflow Service","Response Time Requirements"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Response Time Requirements should meet response time targets for emergency escalations","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should meet response time targets for emergency escalations"},{"ancestorTitles":["Crisis Escalation Workflow Service","Response Time Requirements"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Workflow Service Response Time Requirements should track escalation timeline accurately","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should track escalation timeline accurately"}],"endTime":1755478096219,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\crisisEscalationWorkflow.test.ts","startTime":1755478093443,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Crisis Detection and Escalation Integration","Automatic Escalation Triggering"],"duration":100,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Detection and Escalation Integration Automatic Escalation Triggering should trigger emergency services escalation for suicide attempt","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should trigger emergency services escalation for suicide attempt"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Automatic Escalation Triggering"],"duration":8,"failureDetails":[{"matcherResult":{"actual":"medium","expected":{"sample":{},"inverse":false},"message":"expect(received).toEqual(expected) // deep equality\n\nExpected: StringMatching /high|critical/\nReceived: \"medium\"","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: StringMatching /high|critical/\nReceived: \"medium\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts:61:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Detection and Escalation Integration Automatic Escalation Triggering should trigger crisis counselor escalation for high-risk ideation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should trigger crisis counselor escalation for high-risk ideation"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Automatic Escalation Triggering"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Detection and Escalation Integration Automatic Escalation Triggering should trigger medical emergency escalation for overdose situation","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should trigger medical emergency escalation for overdose situation"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Automatic Escalation Triggering"],"duration":6,"failureDetails":[{"matcherResult":{"actual":"suicide-attempt","expected":"violence-threat","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"violence-threat\"\nReceived: \"suicide-attempt\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"violence-threat\"\nReceived: \"suicide-attempt\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts:112:56)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Detection and Escalation Integration Automatic Escalation Triggering should provide escalation recommendations without user ID","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"failed","title":"should provide escalation recommendations without user ID"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Escalation Tier Selection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Detection and Escalation Integration Escalation Tier Selection should recommend peer support for moderate anxiety","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should recommend peer support for moderate anxiety"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Escalation Tier Selection"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 60\nReceived:   9.094400000000002","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 60\nReceived:   9.094400000000002\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts:145:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Detection and Escalation Integration Escalation Tier Selection should recommend crisis counselor for severe distress","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should recommend crisis counselor for severe distress"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Cultural Context Integration"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts:169:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Detection and Escalation Integration Cultural Context Integration should handle cultural considerations in escalation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle cultural considerations in escalation"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Detection and Escalation Integration Error Handling should handle escalation errors gracefully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle escalation errors gracefully"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Multi-Method Integration"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts:228:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Detection and Escalation Integration Multi-Method Integration should combine keyword, AI, and cultural analysis for escalation decisions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should combine keyword, AI, and cultural analysis for escalation decisions"},{"ancestorTitles":["Crisis Detection and Escalation Integration","Response Time and Performance"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"medium","expected":"emergency","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"emergency\"\nReceived: \"medium\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"emergency\"\nReceived: \"medium\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts:259:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Detection and Escalation Integration Response Time and Performance should process and escalate severe cases quickly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should process and escalate severe cases quickly"}],"endTime":1755478096306,"message":"  ● Crisis Detection and Escalation Integration › Automatic Escalation Triggering › should trigger crisis counselor escalation for high-risk ideation\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: StringMatching /high|critical/\n    Received: \"medium\"\n\n    \u001b[0m \u001b[90m 59 |\u001b[39m       \u001b[90m// Should detect crisis indicators\u001b[39m\n     \u001b[90m 60 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 61 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mtoEqual(expect\u001b[33m.\u001b[39mstringMatching(\u001b[35m/high|critical/\u001b[39m))\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 62 |\u001b[39m       expect(result\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m60\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 63 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 64 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisDetectionEscalationIntegration.test.ts:61:38)\n\n  ● Crisis Detection and Escalation Integration › Automatic Escalation Triggering › should provide escalation recommendations without user ID\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"violence-threat\"\n    Received: \"suicide-attempt\"\n\n    \u001b[0m \u001b[90m 110 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 111 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mrecommendedTier)\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency-services'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 112 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mtriggerReason)\u001b[33m.\u001b[39mtoBe(\u001b[32m'violence-threat'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 113 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mescalationInitiated)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 114 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mescalationId)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m\n     \u001b[90m 115 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisDetectionEscalationIntegration.test.ts:112:56)\n\n  ● Crisis Detection and Escalation Integration › Escalation Tier Selection › should recommend crisis counselor for severe distress\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 60\n    Received:   9.094400000000002\n\n    \u001b[0m \u001b[90m 143 |\u001b[39m\n     \u001b[90m 144 |\u001b[39m       \u001b[90m// Should detect high risk requiring professional help\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 145 |\u001b[39m       expect(result\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m60\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 146 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 147 |\u001b[39m\n     \u001b[90m 148 |\u001b[39m       \u001b[90m// Should have appropriate escalation tier\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisDetectionEscalationIntegration.test.ts:145:36)\n\n  ● Crisis Detection and Escalation Integration › Cultural Context Integration › should handle cultural considerations in escalation\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 167 |\u001b[39m\n     \u001b[90m 168 |\u001b[39m       \u001b[90m// Should detect crisis with cultural context\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 169 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 170 |\u001b[39m       expect(result\u001b[33m.\u001b[39mculturalAnalysis)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 171 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 172 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisDetectionEscalationIntegration.test.ts:169:42)\n\n  ● Crisis Detection and Escalation Integration › Multi-Method Integration › should combine keyword, AI, and cultural analysis for escalation decisions\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 226 |\u001b[39m\n     \u001b[90m 227 |\u001b[39m       \u001b[90m// Should make escalation decision based on combined analysis\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 228 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 229 |\u001b[39m       expect(result\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mmethodsUsed)\u001b[33m.\u001b[39mtoContain(\u001b[32m'keyword'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 230 |\u001b[39m       expect(result\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mmethodsUsed)\u001b[33m.\u001b[39mtoContain(\u001b[32m'ai'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 231 |\u001b[39m       expect(result\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mmethodsUsed)\u001b[33m.\u001b[39mtoContain(\u001b[32m'cultural'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisDetectionEscalationIntegration.test.ts:228:42)\n\n  ● Crisis Detection and Escalation Integration › Response Time and Performance › should process and escalate severe cases quickly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"emergency\"\n    Received: \"medium\"\n\n    \u001b[0m \u001b[90m 257 |\u001b[39m\n     \u001b[90m 258 |\u001b[39m       \u001b[90m// Should properly escalate emergency case\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 259 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 260 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mrecommendedTier)\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency-services'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 261 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mescalationInitiated)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 262 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/integration/crisisDetectionEscalationIntegration.test.ts:259:38)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\integration\\crisisDetectionEscalationIntegration.test.ts","startTime":1755478093267,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emergency Level Crisis Detection"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Emergency Level Crisis Detection should detect immediate suicide intent with high confidence","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should detect immediate suicide intent with high confidence"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emergency Level Crisis Detection"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Emergency Level Crisis Detection should detect suicide planning with method consideration","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should detect suicide planning with method consideration"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emergency Level Crisis Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Emergency Level Crisis Detection should detect medical emergency situations","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should detect medical emergency situations"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emergency Level Crisis Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Emergency Level Crisis Detection should detect violence threats toward others","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should detect violence threats toward others"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Critical Level Crisis Detection"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Critical Level Crisis Detection should detect active suicidal ideation","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should detect active suicidal ideation"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Critical Level Crisis Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Critical Level Crisis Detection should detect substance crisis with suicidal intent","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should detect substance crisis with suicidal intent"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Critical Level Crisis Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Critical Level Crisis Detection should detect abuse disclosure","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should detect abuse disclosure"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","High Level Crisis Detection"],"duration":6,"failureDetails":[{"matcherResult":{"actual":"medium","expected":"high","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"medium\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"high\"\nReceived: \"medium\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:119:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService High Level Crisis Detection should detect self-harm escalation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should detect self-harm escalation"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","High Level Crisis Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService High Level Crisis Detection should detect severe psychological distress","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect severe psychological distress"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","High Level Crisis Detection"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService High Level Crisis Detection should detect panic crisis","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect panic crisis"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Contextual Analysis"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeLessThan(expected)\n\nExpected: < 70\nReceived:   85","pass":false}}],"failureMessages":["Error: expect(received).toBeLessThan(expected)\n\nExpected: < 70\nReceived:   85\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:152:51)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Contextual Analysis should reduce crisis level when negative modifiers are present","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should reduce crisis level when negative modifiers are present"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Contextual Analysis"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Contextual Analysis should increase crisis level with positive amplifiers","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should increase crisis level with positive amplifiers"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Contextual Analysis"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Contextual Analysis should detect timeline urgency","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect timeline urgency"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emotional Pattern Recognition"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0.7\nReceived:   0.3","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0.7\nReceived:   0.3\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:185:70)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Emotional Pattern Recognition should detect hopelessness emotional pattern","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should detect hopelessness emotional pattern"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emotional Pattern Recognition"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0.6\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0.6\nReceived:   0\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:194:64)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Emotional Pattern Recognition should detect desperation emotional pattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should detect desperation emotional pattern"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emotional Pattern Recognition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Emotional Pattern Recognition should detect emotional numbness pattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect emotional numbness pattern"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Emotional Pattern Recognition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Emotional Pattern Recognition should detect rage crisis pattern","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect rage crisis pattern"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Risk Assessment Scoring"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:226:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Risk Assessment Scoring should calculate accurate immediate risk scores","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should calculate accurate immediate risk scores"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Risk Assessment Scoring"],"duration":2,"failureDetails":[{"matcherResult":{"actual":"none","expected":"immediate","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"immediate\"\nReceived: \"none\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"immediate\"\nReceived: \"none\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:240:66)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Risk Assessment Scoring should provide appropriate intervention urgency levels","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide appropriate intervention urgency levels"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Intervention Recommendations"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:253:57)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Intervention Recommendations should provide immediate intervention for emergency cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide immediate intervention for emergency cases"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Intervention Recommendations"],"duration":1,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:264:81)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Intervention Recommendations should provide urgent intervention for high-risk cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide urgent intervention for high-risk cases"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Intervention Recommendations"],"duration":1,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:273:85)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Intervention Recommendations should provide supportive intervention for medium-risk cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide supportive intervention for medium-risk cases"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Intervention Recommendations"],"duration":1,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:282:85)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Intervention Recommendations should provide monitoring recommendations for ongoing support","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide monitoring recommendations for ongoing support"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","False Positive Prevention"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"emergency","expected":"emergency","message":"expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"emergency\"","name":"toBe","pass":true}}],"failureMessages":["Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"emergency\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:297:54)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService False Positive Prevention should not trigger crisis for hypothetical or past scenarios","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should not trigger crisis for hypothetical or past scenarios"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","False Positive Prevention"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService False Positive Prevention should handle metaphorical language appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle metaphorical language appropriately"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Analysis Metadata"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Analysis Metadata should provide accurate analysis metadata","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should provide accurate analysis metadata"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Analysis Metadata"],"duration":2,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected value: \"Suicide planning indicators present\"\nReceived array: []","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected value: \"Suicide planning indicators present\"\nReceived array: []\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:334:63)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Analysis Metadata should flag appropriate concerns","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should flag appropriate concerns"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Error Handling should handle empty or invalid input gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle empty or invalid input gracefully"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Error Handling should provide failsafe results when analysis fails","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should provide failsafe results when analysis fails"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Integration Testing"],"duration":2,"failureDetails":[{"matcherResult":{"actual":"critical","expected":"emergency","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"emergency\"\nReceived: \"critical\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"emergency\"\nReceived: \"critical\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:373:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Integration Testing should handle complex multi-indicator scenarios","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle complex multi-indicator scenarios"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Integration Testing"],"duration":1,"failureDetails":[{"matcherResult":{"actual":"emergency","expected":"emergency","message":"expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"emergency\"","name":"toBe","pass":true}}],"failureMessages":["Error: expect(received).not.toBe(expected) // Object.is equality\n\nExpected: not \"emergency\"\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts:388:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"EnhancedCrisisKeywordDetectionService Integration Testing should handle mixed signals appropriately","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle mixed signals appropriately"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Performance Testing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Performance Testing should complete analysis within reasonable time","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should complete analysis within reasonable time"},{"ancestorTitles":["EnhancedCrisisKeywordDetectionService","Performance Testing"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EnhancedCrisisKeywordDetectionService Performance Testing should handle long text inputs efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle long text inputs efficiently"}],"endTime":1755478096342,"message":"  ● EnhancedCrisisKeywordDetectionService › High Level Crisis Detection › should detect self-harm escalation\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"high\"\n    Received: \"medium\"\n\n    \u001b[0m \u001b[90m 117 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'high'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39mkeywordMatches\u001b[33m.\u001b[39msome(m \u001b[33m=>\u001b[39m m\u001b[33m.\u001b[39mcategory \u001b[33m===\u001b[39m \u001b[32m'self-harm'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 119 |\u001b[39m       expect(result\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39minterventionUrgency)\u001b[33m.\u001b[39mtoBe(\u001b[32m'high'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 120 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 121 |\u001b[39m\n     \u001b[90m 122 |\u001b[39m     test(\u001b[32m'should detect severe psychological distress'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:119:57)\n\n  ● EnhancedCrisisKeywordDetectionService › Contextual Analysis › should reduce crisis level when negative modifiers are present\n\n    expect(received).toBeLessThan(expected)\n\n    Expected: < 70\n    Received:   85\n\n    \u001b[0m \u001b[90m 150 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 151 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 152 |\u001b[39m       expect(result\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m70\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 153 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 154 |\u001b[39m\n     \u001b[90m 155 |\u001b[39m     test(\u001b[32m'should increase crisis level with positive amplifiers'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:152:51)\n\n  ● EnhancedCrisisKeywordDetectionService › Emotional Pattern Recognition › should detect hopelessness emotional pattern\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0.7\n    Received:   0.3\n\n    \u001b[0m \u001b[90m 183 |\u001b[39m       expect(result\u001b[33m.\u001b[39memotionalIndicators\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 184 |\u001b[39m       expect(result\u001b[33m.\u001b[39memotionalIndicators\u001b[33m.\u001b[39msome(e \u001b[33m=>\u001b[39m e\u001b[33m.\u001b[39memotionalState \u001b[33m===\u001b[39m \u001b[32m'hopelessness'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 185 |\u001b[39m       expect(result\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39memotionalProfile\u001b[33m.\u001b[39mcrisisAlignment)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.7\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 186 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 187 |\u001b[39m\n     \u001b[90m 188 |\u001b[39m     test(\u001b[32m'should detect desperation emotional pattern'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:185:70)\n\n  ● EnhancedCrisisKeywordDetectionService › Emotional Pattern Recognition › should detect desperation emotional pattern\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0.6\n    Received:   0\n\n    \u001b[0m \u001b[90m 192 |\u001b[39m       \n     \u001b[90m 193 |\u001b[39m       expect(result\u001b[33m.\u001b[39memotionalIndicators\u001b[33m.\u001b[39msome(e \u001b[33m=>\u001b[39m e\u001b[33m.\u001b[39memotionalState \u001b[33m===\u001b[39m \u001b[32m'desperation'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 194 |\u001b[39m       expect(result\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39memotionalProfile\u001b[33m.\u001b[39mintensity)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.6\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 195 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 196 |\u001b[39m\n     \u001b[90m 197 |\u001b[39m     test(\u001b[32m'should detect emotional numbness pattern'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:194:64)\n\n  ● EnhancedCrisisKeywordDetectionService › Risk Assessment Scoring › should calculate accurate immediate risk scores\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 224 |\u001b[39m       \n     \u001b[90m 225 |\u001b[39m       expect(highResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeGreaterThan(mediumResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 226 |\u001b[39m       expect(mediumResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeGreaterThan(lowResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 227 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 228 |\u001b[39m\n     \u001b[90m 229 |\u001b[39m     test(\u001b[32m'should provide appropriate intervention urgency levels'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:226:57)\n\n  ● EnhancedCrisisKeywordDetectionService › Risk Assessment Scoring › should provide appropriate intervention urgency levels\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"immediate\"\n    Received: \"none\"\n\n    \u001b[0m \u001b[90m 238 |\u001b[39m       \u001b[36mconst\u001b[39m lowResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m enhancedCrisisKeywordDetectionService\u001b[33m.\u001b[39manalyzeEnhancedCrisisKeywords(lowText)\u001b[33m;\u001b[39m\n     \u001b[90m 239 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 240 |\u001b[39m       expect(immediateResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39minterventionUrgency)\u001b[33m.\u001b[39mtoBe(\u001b[32m'immediate'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 241 |\u001b[39m       expect(highResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39minterventionUrgency)\u001b[33m.\u001b[39mtoBe(\u001b[32m'high'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 242 |\u001b[39m       expect(mediumResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39minterventionUrgency)\u001b[33m.\u001b[39mtoBe(\u001b[32m'medium'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 243 |\u001b[39m       expect(lowResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39minterventionUrgency)\u001b[33m.\u001b[39mtoBe(\u001b[32m'low'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:240:66)\n\n  ● EnhancedCrisisKeywordDetectionService › Intervention Recommendations › should provide immediate intervention for emergency cases\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 251 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m enhancedCrisisKeywordDetectionService\u001b[33m.\u001b[39manalyzeEnhancedCrisisKeywords(text)\u001b[33m;\u001b[39m\n     \u001b[90m 252 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 253 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 254 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtype)\u001b[33m.\u001b[39mtoBe(\u001b[32m'immediate'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 255 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mactionItems)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Contact emergency services (911)'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 256 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtimeframe)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Immediate'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:253:57)\n\n  ● EnhancedCrisisKeywordDetectionService › Intervention Recommendations › should provide urgent intervention for high-risk cases\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 262 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m enhancedCrisisKeywordDetectionService\u001b[33m.\u001b[39manalyzeEnhancedCrisisKeywords(text)\u001b[33m;\u001b[39m\n     \u001b[90m 263 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 264 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39msome(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'urgent'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 265 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39msome(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mtimeframe \u001b[33m===\u001b[39m \u001b[32m'Within 2-4 hours'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 266 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 267 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:264:81)\n\n  ● EnhancedCrisisKeywordDetectionService › Intervention Recommendations › should provide supportive intervention for medium-risk cases\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 271 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m enhancedCrisisKeywordDetectionService\u001b[33m.\u001b[39manalyzeEnhancedCrisisKeywords(text)\u001b[33m;\u001b[39m\n     \u001b[90m 272 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 273 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39msome(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'supportive'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 274 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39msome(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mtimeframe \u001b[33m===\u001b[39m \u001b[32m'Within 24 hours'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 275 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 276 |\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:273:85)\n\n  ● EnhancedCrisisKeywordDetectionService › Intervention Recommendations › should provide monitoring recommendations for ongoing support\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 280 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m enhancedCrisisKeywordDetectionService\u001b[33m.\u001b[39manalyzeEnhancedCrisisKeywords(text)\u001b[33m;\u001b[39m\n     \u001b[90m 281 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 282 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39msome(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[32m'monitoring'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 283 |\u001b[39m       expect(result\u001b[33m.\u001b[39minterventionRecommendations\u001b[33m.\u001b[39msome(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mtimeframe \u001b[33m===\u001b[39m \u001b[32m'Ongoing'\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 284 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 285 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:282:85)\n\n  ● EnhancedCrisisKeywordDetectionService › False Positive Prevention › should not trigger crisis for hypothetical or past scenarios\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"emergency\"\n\n    \u001b[0m \u001b[90m 295 |\u001b[39m       \u001b[36mconst\u001b[39m academicResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m enhancedCrisisKeywordDetectionService\u001b[33m.\u001b[39manalyzeEnhancedCrisisKeywords(academicText)\u001b[33m;\u001b[39m\n     \u001b[90m 296 |\u001b[39m       \n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 297 |\u001b[39m       expect(hypotheticalResult\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 298 |\u001b[39m       expect(pastResult\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m50\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 299 |\u001b[39m       expect(academicResult\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 300 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:297:54)\n\n  ● EnhancedCrisisKeywordDetectionService › Analysis Metadata › should flag appropriate concerns\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected value: \"Suicide planning indicators present\"\n    Received array: []\n\n    \u001b[0m \u001b[90m 332 |\u001b[39m       \n     \u001b[90m 333 |\u001b[39m       expect(emergencyResult\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mflaggedConcerns)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Emergency-level crisis indicators detected'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 334 |\u001b[39m       expect(planningResult\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mflaggedConcerns)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Suicide planning indicators present'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 335 |\u001b[39m       expect(violenceResult\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mflaggedConcerns)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Violence threat indicators detected'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 336 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 337 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:334:63)\n\n  ● EnhancedCrisisKeywordDetectionService › Integration Testing › should handle complex multi-indicator scenarios\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"emergency\"\n    Received: \"critical\"\n\n    \u001b[0m \u001b[90m 371 |\u001b[39m       \n     \u001b[90m 372 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 373 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 374 |\u001b[39m       expect(result\u001b[33m.\u001b[39memergencyServicesRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 375 |\u001b[39m       expect(result\u001b[33m.\u001b[39mkeywordMatches\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 376 |\u001b[39m       expect(result\u001b[33m.\u001b[39memotionalIndicators\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:373:38)\n\n  ● EnhancedCrisisKeywordDetectionService › Integration Testing › should handle mixed signals appropriately\n\n    expect(received).not.toBe(expected) // Object.is equality\n\n    Expected: not \"emergency\"\n\n    \u001b[0m \u001b[90m 386 |\u001b[39m       \n     \u001b[90m 387 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 388 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 389 |\u001b[39m       expect(result\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mprotectiveFactors\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 390 |\u001b[39m       expect(result\u001b[33m.\u001b[39mriskAssessment\u001b[33m.\u001b[39mimmediateRisk)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m70\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 391 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/services/enhancedCrisisKeywordDetection.test.ts:388:42)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\services\\enhancedCrisisKeywordDetection.test.ts","startTime":1755478093261,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Crisis Escalation Integration Unit Tests","Crisis Escalation Workflow Integration"],"duration":136,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\unit\\crisisEscalationIntegration.test.ts:194:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Integration Unit Tests Crisis Escalation Workflow Integration should integrate crisis escalation workflow for emergency cases","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should integrate crisis escalation workflow for emergency cases"},{"ancestorTitles":["Crisis Escalation Integration Unit Tests","Crisis Escalation Workflow Integration"],"duration":28,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\unit\\crisisEscalationIntegration.test.ts:215:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Integration Unit Tests Crisis Escalation Workflow Integration should provide escalation recommendations without initiating when no userId","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide escalation recommendations without initiating when no userId"},{"ancestorTitles":["Crisis Escalation Integration Unit Tests","Crisis Escalation Workflow Integration"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Crisis Escalation Integration Unit Tests Crisis Escalation Workflow Integration should not trigger escalation for low-risk cases","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not trigger escalation for low-risk cases"},{"ancestorTitles":["Crisis Escalation Integration Unit Tests","Escalation Error Handling"],"duration":11,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\unit\\crisisEscalationIntegration.test.ts:285:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Integration Unit Tests Escalation Error Handling should handle escalation service errors gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle escalation service errors gracefully"},{"ancestorTitles":["Crisis Escalation Integration Unit Tests","Performance and Timing"],"duration":12,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\unit\\crisisEscalationIntegration.test.ts:312:62)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Crisis Escalation Integration Unit Tests Performance and Timing should complete analysis and escalation quickly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should complete analysis and escalation quickly"}],"endTime":1755478096380,"message":"  ● Crisis Escalation Integration Unit Tests › Crisis Escalation Workflow Integration › should integrate crisis escalation workflow for emergency cases\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 192 |\u001b[39m\n     \u001b[90m 193 |\u001b[39m       \u001b[90m// Should detect crisis indicators\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 194 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 195 |\u001b[39m       expect(result\u001b[33m.\u001b[39moverallSeverity)\u001b[33m.\u001b[39mtoBe(\u001b[32m'emergency'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 196 |\u001b[39m       expect(result\u001b[33m.\u001b[39memergencyServicesRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 197 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/crisisEscalationIntegration.test.ts:194:42)\n\n  ● Crisis Escalation Integration Unit Tests › Crisis Escalation Workflow Integration › should provide escalation recommendations without initiating when no userId\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 213 |\u001b[39m\n     \u001b[90m 214 |\u001b[39m       \u001b[90m// Should detect crisis but not initiate escalation\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 215 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 216 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 217 |\u001b[39m       \n     \u001b[90m 218 |\u001b[39m       \u001b[90m// Should have escalation recommendations but not initiate\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/crisisEscalationIntegration.test.ts:215:42)\n\n  ● Crisis Escalation Integration Unit Tests › Escalation Error Handling › should handle escalation service errors gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n    \u001b[0m \u001b[90m 283 |\u001b[39m\n     \u001b[90m 284 |\u001b[39m       \u001b[90m// Should still provide crisis analysis\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 285 |\u001b[39m       expect(result\u001b[33m.\u001b[39mhasCrisisIndicators)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 286 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationRequired)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 287 |\u001b[39m\n     \u001b[90m 288 |\u001b[39m       \u001b[90m// Should handle escalation error gracefully\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/crisisEscalationIntegration.test.ts:285:42)\n\n  ● Crisis Escalation Integration Unit Tests › Performance and Timing › should complete analysis and escalation quickly\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n    \u001b[0m \u001b[90m 310 |\u001b[39m       expect(processingTime)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m1000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 311 |\u001b[39m       expect(result\u001b[33m.\u001b[39manalysisMetadata\u001b[33m.\u001b[39mprocessingTime)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 312 |\u001b[39m       expect(result\u001b[33m.\u001b[39mescalationWorkflow\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mescalationInitiated)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 313 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 314 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 315 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/crisisEscalationIntegration.test.ts:312:62)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\unit\\crisisEscalationIntegration.test.ts","startTime":1755478093326,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":120,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features renders anonymous group sessions interface","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"renders anonymous group sessions interface"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":46,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features displays privacy protection notice","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"displays privacy protection notice"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features generates anonymous alias on load","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"generates anonymous alias on load"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":63,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features allows generating new anonymous alias","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"allows generating new anonymous alias"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":69,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features displays session calendar without exposing user identity","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"displays session calendar without exposing user identity"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":60,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features shows session types and facilitator aliases (not real names)","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"shows session types and facilitator aliases (not real names)"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":44,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Joining session anonymously:\", ObjectContaining {\"anonymousAlias\": Any<String>, \"sessionId\": Any<String>}\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Joining session anonymously:\", ObjectContaining {\"anonymousAlias\": Any<String>, \"sessionId\": Any<String>}\n\nNumber of calls: 0\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\views\\GroupSessionView.test.tsx:102:25)"],"fullName":"GroupSessionView - Anonymity Features handles session joining with anonymous identity","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"handles session joining with anonymous identity"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":46,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features shows participant counts without revealing identities","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"shows participant counts without revealing identities"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":45,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features maintains anonymity in session interactions","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"maintains anonymity in session interactions"},{"ancestorTitles":["GroupSessionView - Anonymity Features"],"duration":54,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Anonymity Features provides accessibility features for anonymous navigation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"provides accessibility features for anonymous navigation"},{"ancestorTitles":["GroupSessionView - Security Features"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"GroupSessionView - Security Features does not expose user authentication details","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"does not expose user authentication details"},{"ancestorTitles":["GroupSessionView - Security Features"],"duration":42,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Joining session anonymously:\", ObjectContaining {\"anonymousAlias\": Any<String>, \"participantNotes\": StringContaining \"Joined as\"}\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"Joining session anonymously:\", ObjectContaining {\"anonymousAlias\": Any<String>, \"participantNotes\": StringContaining \"Joined as\"}\n\nNumber of calls: 0\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\views\\GroupSessionView.test.tsx:178:25)"],"fullName":"GroupSessionView - Security Features uses secure anonymous session joining","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"uses secure anonymous session joining"}],"endTime":1755478096911,"message":"  ● GroupSessionView - Anonymity Features › handles session joining with anonymous identity\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Joining session anonymously:\", ObjectContaining {\"anonymousAlias\": Any<String>, \"sessionId\": Any<String>}\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 100 |\u001b[39m     \u001b[90m// Should show success message (mocked alert)\u001b[39m\n     \u001b[90m 101 |\u001b[39m     \u001b[90m// The actual implementation would show a success state\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 102 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 103 |\u001b[39m       \u001b[32m'Joining session anonymously:'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 104 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 105 |\u001b[39m         sessionId\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39many(\u001b[33mString\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/views/GroupSessionView.test.tsx:102:25)\n\n  ● GroupSessionView - Security Features › uses secure anonymous session joining\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"Joining session anonymously:\", ObjectContaining {\"anonymousAlias\": Any<String>, \"participantNotes\": StringContaining \"Joined as\"}\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 176 |\u001b[39m     \n     \u001b[90m 177 |\u001b[39m     \u001b[90m// Verify joining mechanism uses anonymous identifier\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 178 |\u001b[39m     expect(console\u001b[33m.\u001b[39mlog)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m     |\u001b[39m                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 179 |\u001b[39m       \u001b[32m'Joining session anonymously:'\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 180 |\u001b[39m       expect\u001b[33m.\u001b[39mobjectContaining({\n     \u001b[90m 181 |\u001b[39m         anonymousAlias\u001b[33m:\u001b[39m expect\u001b[33m.\u001b[39many(\u001b[33mString\u001b[39m)\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/views/GroupSessionView.test.tsx:178:25)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\views\\GroupSessionView.test.tsx","startTime":1755478093319,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1755478108933,"message":"  ● Test suite failed to run\n\n    Cannot find module 'axe-playwright' from 'tests/accessibility/wcag-compliance.test.ts'\n\n    \u001b[0m \u001b[90m 1 |\u001b[39m \u001b[36mimport\u001b[39m { test\u001b[33m,\u001b[39m expect\u001b[33m,\u001b[39m \u001b[33mPage\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'@playwright/test'\u001b[39m\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 2 |\u001b[39m \u001b[36mimport\u001b[39m { injectAxe\u001b[33m,\u001b[39m checkA11y\u001b[33m,\u001b[39m getViolations } \u001b[36mfrom\u001b[39m \u001b[32m'axe-playwright'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m   |\u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 3 |\u001b[39m\n     \u001b[90m 4 |\u001b[39m \u001b[90m/**\u001b[39m\n     \u001b[90m 5 |\u001b[39m \u001b[90m * WCAG 2.1 AA Compliance Testing Suite\u001b[39m\u001b[0m\n\n      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)\n      at Object.<anonymous> (tests/accessibility/wcag-compliance.test.ts:2:1)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\accessibility\\wcag-compliance.test.ts","startTime":1755478108933,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Service Worker Performance","Cache Performance"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Cache Performance should measure cache hit performance","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should measure cache hit performance"},{"ancestorTitles":["Service Worker Performance","Cache Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Cache Performance should optimize cache miss scenarios","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should optimize cache miss scenarios"},{"ancestorTitles":["Service Worker Performance","Cache Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Cache Performance should handle large cache operations efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle large cache operations efficiently"},{"ancestorTitles":["Service Worker Performance","Bundle Size Optimization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Bundle Size Optimization should verify service worker size is under target","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should verify service worker size is under target"},{"ancestorTitles":["Service Worker Performance","Bundle Size Optimization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Bundle Size Optimization should verify precached assets are under mobile target","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should verify precached assets are under mobile target"},{"ancestorTitles":["Service Worker Performance","Bundle Size Optimization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Bundle Size Optimization should count precached resources efficiently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should count precached resources efficiently"},{"ancestorTitles":["Service Worker Performance","Memory Usage"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Memory Usage should manage cache memory efficiently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should manage cache memory efficiently"},{"ancestorTitles":["Service Worker Performance","Memory Usage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Memory Usage should clean up unused cache entries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should clean up unused cache entries"},{"ancestorTitles":["Service Worker Performance","Network Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Network Performance should implement efficient network timeouts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should implement efficient network timeouts"},{"ancestorTitles":["Service Worker Performance","Network Performance"],"duration":5015,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Network Performance should handle slow network connections gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle slow network connections gracefully"},{"ancestorTitles":["Service Worker Performance","Network Performance"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Network Performance should prioritize critical resources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should prioritize critical resources"},{"ancestorTitles":["Service Worker Performance","Background Sync Performance"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Background Sync Performance should queue offline requests efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should queue offline requests efficiently"},{"ancestorTitles":["Service Worker Performance","Background Sync Performance"],"duration":147,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Background Sync Performance should process background sync efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should process background sync efficiently"},{"ancestorTitles":["Service Worker Performance","Cache Strategy Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Cache Strategy Performance should measure cache-first strategy performance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should measure cache-first strategy performance"},{"ancestorTitles":["Service Worker Performance","Cache Strategy Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Cache Strategy Performance should measure network-first strategy performance","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should measure network-first strategy performance"},{"ancestorTitles":["Service Worker Performance","Cache Strategy Performance"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Cache Strategy Performance should measure stale-while-revalidate performance","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should measure stale-while-revalidate performance"},{"ancestorTitles":["Service Worker Performance","Error Handling Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Error Handling Performance should handle cache errors without blocking","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle cache errors without blocking"},{"ancestorTitles":["Service Worker Performance","Error Handling Performance"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Service Worker Performance Error Handling Performance should provide graceful degradation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should provide graceful degradation"}],"endTime":1755478101304,"message":"","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\tests\\service-worker\\performance.test.ts","startTime":1755478093296,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Cultural Crisis Detection Integration","MoodTracker Crisis Detection"],"duration":344,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration MoodTracker Crisis Detection should detect crisis indicators from low mood values","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect crisis indicators from low mood values"},{"ancestorTitles":["Cultural Crisis Detection Integration","MoodTracker Crisis Detection"],"duration":135,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration MoodTracker Crisis Detection should detect crisis from concerning tags","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect crisis from concerning tags"},{"ancestorTitles":["Cultural Crisis Detection Integration","MoodTracker Crisis Detection"],"duration":123,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration MoodTracker Crisis Detection should detect crisis from concerning note content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect crisis from concerning note content"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cultural Crisis Alert Component"],"duration":82,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cultural Crisis Alert Component should display culturally-appropriate interventions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should display culturally-appropriate interventions"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cultural Crisis Alert Component"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cultural Crisis Alert Component should show loading state during analysis","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show loading state during analysis"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","western cultural context"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios western cultural context should detect directSuicidalIdeation crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect directSuicidalIdeation crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","western cultural context"],"duration":171,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'culturallyAdjustedRisk')\n    at C:\\Users\\damat\\_REPOS\\CoreV2\\src\\hooks\\useCulturalCrisisDetection.ts:150:44\n    at basicStateReducer (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:15721:41)\n    at updateReducer (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:15845:22)\n    at updateState (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:16185:10)\n    at Object.useState (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:17096:16)\n    at useState (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react\\cjs\\react.development.js:1622:21)\n    at useCulturalCrisisDetection (C:\\Users\\damat\\_REPOS\\CoreV2\\src\\hooks\\useCulturalCrisisDetection.ts:79:37)\n    at CulturalCrisisAlert (C:\\Users\\damat\\_REPOS\\CoreV2\\src\\components\\CulturalCrisisAlert.tsx:84:33)\n    at renderWithHooks (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:15486:18)\n    at updateFunctionComponent (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:19617:20)\n    at beginWork (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:21640:16)\n    at beginWork$1 (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:27465:14)\n    at performUnitOfWork (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:26599:12)\n    at workLoopSync (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:26505:5)\n    at renderRootSync (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:25889:20)\n    at performConcurrentWorkOnRoot (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\react-dom\\cjs\\react-dom.development.js:25789:22)\n    at workLoop (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\scheduler\\cjs\\scheduler.development.js:266:34)\n    at flushWork (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\scheduler\\cjs\\scheduler.development.js:239:14)\n    at performWorkUntilDeadline (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\scheduler\\cjs\\scheduler.development.js:533:21)\n    at Timeout.task [as _onTimeout] (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jsdom\\lib\\jsdom\\browser\\Window.js:520:19)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)"],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios western cultural context should detect indirectDistress crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should detect indirectDistress crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","western cultural context"],"duration":96,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios western cultural context should detect familyConflict crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect familyConflict crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","western cultural context"],"duration":91,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios western cultural context should detect academicPressure crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect academicPressure crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","eastern cultural context"],"duration":96,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios eastern cultural context should detect directSuicidalIdeation crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect directSuicidalIdeation crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","eastern cultural context"],"duration":91,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios eastern cultural context should detect indirectDistress crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect indirectDistress crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","eastern cultural context"],"duration":94,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios eastern cultural context should detect familyConflict crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect familyConflict crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","eastern cultural context"],"duration":91,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios eastern cultural context should detect academicPressure crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect academicPressure crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","latinAmerican cultural context"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios latinAmerican cultural context should detect directSuicidalIdeation crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect directSuicidalIdeation crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","latinAmerican cultural context"],"duration":92,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios latinAmerican cultural context should detect indirectDistress crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect indirectDistress crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","latinAmerican cultural context"],"duration":95,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios latinAmerican cultural context should detect familyConflict crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect familyConflict crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","latinAmerican cultural context"],"duration":94,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios latinAmerican cultural context should detect academicPressure crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect academicPressure crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","middleEastern cultural context"],"duration":92,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios middleEastern cultural context should detect directSuicidalIdeation crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect directSuicidalIdeation crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","middleEastern cultural context"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios middleEastern cultural context should detect indirectDistress crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect indirectDistress crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","middleEastern cultural context"],"duration":94,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios middleEastern cultural context should detect familyConflict crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect familyConflict crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Cross-Cultural Crisis Scenarios","middleEastern cultural context"],"duration":92,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Cross-Cultural Crisis Scenarios middleEastern cultural context should detect academicPressure crisis appropriately","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect academicPressure crisis appropriately"},{"ancestorTitles":["Cultural Crisis Detection Integration","Bias Mitigation"],"duration":10008,"failureDetails":[{"message":"thrown: \"Exceeded timeout of 10000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\""}],"failureMessages":["Error: thrown: \"Exceeded timeout of 10000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at C:\\Users\\damat\\_REPOS\\CoreV2\\src\\tests\\culturalCrisisDetection.test.tsx:396:5\n    at _dispatchDescribe (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-circus\\build\\index.js:91:26)\n    at describe (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-circus\\build\\index.js:55:5)\n    at C:\\Users\\damat\\_REPOS\\CoreV2\\src\\tests\\culturalCrisisDetection.test.tsx:395:3\n    at _dispatchDescribe (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-circus\\build\\index.js:91:26)\n    at describe (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-circus\\build\\index.js:55:5)\n    at Object.<anonymous> (C:\\Users\\damat\\_REPOS\\CoreV2\\src\\tests\\culturalCrisisDetection.test.tsx:143:1)\n    at Runtime._execModule (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-runtime\\build\\index.js:1439:24)\n    at Runtime._loadModule (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-runtime\\build\\index.js:1022:12)\n    at Runtime.requireModule (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-runtime\\build\\index.js:882:12)\n    at jestAdapter (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:77:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runTestInternal (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\damat\\_REPOS\\CoreV2\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"Cultural Crisis Detection Integration Bias Mitigation should adjust risk scores based on cultural context","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should adjust risk scores based on cultural context"},{"ancestorTitles":["Cultural Crisis Detection Integration","Error Handling"],"duration":25,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Error Handling should handle service failures gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle service failures gracefully"},{"ancestorTitles":["Cultural Crisis Detection Integration","Error Handling"],"duration":110,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Error Handling should provide fallback behavior when cultural analysis fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should provide fallback behavior when cultural analysis fails"},{"ancestorTitles":["Cultural Crisis Detection Integration","Accessibility and User Experience"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Accessibility and User Experience should provide proper ARIA labels and announcements","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should provide proper ARIA labels and announcements"},{"ancestorTitles":["Cultural Crisis Detection Integration","Accessibility and User Experience"],"duration":94,"failureDetails":[],"failureMessages":[],"fullName":"Cultural Crisis Detection Integration Accessibility and User Experience should support keyboard navigation","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should support keyboard navigation"}],"endTime":1755478108867,"message":"  ● Cultural Crisis Detection Integration › Cross-Cultural Crisis Scenarios › western cultural context › should detect indirectDistress crisis appropriately\n\n    TypeError: Cannot read properties of undefined (reading 'culturallyAdjustedRisk')\n\n    \u001b[0m \u001b[90m 148 |\u001b[39m           \u001b[33m...\u001b[39mprev\u001b[33m,\u001b[39m\n     \u001b[90m 149 |\u001b[39m           lastAnalysis\u001b[33m:\u001b[39m analysis\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 150 |\u001b[39m           culturallyAdjustedRisk\u001b[33m:\u001b[39m analysis\u001b[33m.\u001b[39mculturallyAdjustedRisk\u001b[33m?\u001b[39m\u001b[33m.\u001b[39madjustedRisk \u001b[33m||\u001b[39m \u001b[35m0\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m     |\u001b[39m                                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 151 |\u001b[39m           biasAdjustments\u001b[33m:\u001b[39m analysis\u001b[33m.\u001b[39mculturalBiasAdjustments\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mmap(adj \u001b[33m=>\u001b[39m adj\u001b[33m.\u001b[39mfactor) \u001b[33m||\u001b[39m []\u001b[33m,\u001b[39m\n     \u001b[90m 152 |\u001b[39m           culturalInterventions\u001b[33m:\u001b[39m analysis\u001b[33m.\u001b[39mculturalInterventions \u001b[33m||\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 153 |\u001b[39m           analysisHistory\u001b[33m:\u001b[39m newHistory\u001b[33m,\u001b[39m\u001b[0m\n\n      at src/hooks/useCulturalCrisisDetection.ts:150:44\n      at basicStateReducer (node_modules/react-dom/cjs/react-dom.development.js:15721:41)\n      at updateReducer (node_modules/react-dom/cjs/react-dom.development.js:15845:22)\n      at updateState (node_modules/react-dom/cjs/react-dom.development.js:16185:10)\n      at Object.useState (node_modules/react-dom/cjs/react-dom.development.js:17096:16)\n      at useState (node_modules/react/cjs/react.development.js:1622:21)\n      at useCulturalCrisisDetection (src/hooks/useCulturalCrisisDetection.ts:79:37)\n      at CulturalCrisisAlert (src/components/CulturalCrisisAlert.tsx:84:33)\n      at renderWithHooks (node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n      at updateFunctionComponent (node_modules/react-dom/cjs/react-dom.development.js:19617:20)\n      at beginWork (node_modules/react-dom/cjs/react-dom.development.js:21640:16)\n      at beginWork$1 (node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n      at performUnitOfWork (node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n      at workLoopSync (node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n      at renderRootSync (node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n      at recoverFromConcurrentError (node_modules/react-dom/cjs/react-dom.development.js:25889:20)\n      at performConcurrentWorkOnRoot (node_modules/react-dom/cjs/react-dom.development.js:25789:22)\n      at workLoop (node_modules/scheduler/cjs/scheduler.development.js:266:34)\n      at flushWork (node_modules/scheduler/cjs/scheduler.development.js:239:14)\n      at performWorkUntilDeadline (node_modules/scheduler/cjs/scheduler.development.js:533:21)\n      at Timeout.task [as _onTimeout] (node_modules/jsdom/lib/jsdom/browser/Window.js:520:19)\n\n  ● Cultural Crisis Detection Integration › Bias Mitigation › should adjust risk scores based on cultural context\n\n    thrown: \"Exceeded timeout of 10000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\n    \u001b[0m \u001b[90m 394 |\u001b[39m\n     \u001b[90m 395 |\u001b[39m   describe(\u001b[32m'Bias Mitigation'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 396 |\u001b[39m     test(\u001b[32m'should adjust risk scores based on cultural context'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 397 |\u001b[39m       \u001b[36mconst\u001b[39m mockBiasAdjustment \u001b[33m=\u001b[39m {\n     \u001b[90m 398 |\u001b[39m         riskLevel\u001b[33m:\u001b[39m \u001b[35m60\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 399 |\u001b[39m         confidenceScore\u001b[33m:\u001b[39m \u001b[35m85\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at src/tests/culturalCrisisDetection.test.tsx:396:5\n      at src/tests/culturalCrisisDetection.test.tsx:395:3\n      at Object.<anonymous> (src/tests/culturalCrisisDetection.test.tsx:143:1)\n","name":"C:\\Users\\damat\\_REPOS\\CoreV2\\src\\tests\\culturalCrisisDetection.test.tsx","startTime":1755478093090,"status":"failed","summary":""}],"wasInterrupted":false}
